//------------------------------------------------------------------------------------------------//
//  The contents of this file are subject to the Mozilla Public License Version 1.1 
//  (the "License"); you may not use this file except in compliance with the License. 
//  You may obtain a copy of the License at http://www.mozilla.org/MPL/
//
//  Software distributed under the License is distributed on an "AS IS" basis, WITHOUT 
//  WARRANTY OF ANY KIND, either express or implied. See the License for the specific 
//  language governing rights and limitations under the License.
//
//  The Original Code is Bemagine.ServiceModel.JmsChannel.
//
//  The Initial Developer of the Original Code is Matthew Bologna, Bemagine.
//  Copyright (c) 2010-2012 Matthew Bologna, Bemagine. All rights reserved.
//------------------------------------------------------------------------------------------------//

namespace Bemagine.ServiceModel.Channels
{
    //--------------------------------------------------------------------------------------------//
    // using directives
    //--------------------------------------------------------------------------------------------//

    using System.Runtime.Serialization;

    //--------------------------------------------------------------------------------------------//
    /// <summary>
    /// Enumerates the reliable request message types.
    /// </summary>
    //--------------------------------------------------------------------------------------------//

    [DataContract(
        Name="ReliableRequestMessageType", 
        Namespace="http://www.bemagine.com/ReliableRequest")
    ]
    internal enum ReliableRequestMessageType
    {
        //----------------------------------------------------------------------------------------//
        /// <summary>
        /// The RELIABLE_REQUEST message type represents the request queued by the client and 
        /// dequeued by the service. In terms of dispatch this message type is generated from 
        /// the requestor and handled by the service.
        /// </summary>
        //----------------------------------------------------------------------------------------//

        [EnumMember] Request = 0,

        //----------------------------------------------------------------------------------------//
        /// <summary>
        /// The RELIABLE_REQUEST_ACK message type represents the acknowledgement generated by 
        /// the service after receiving a reliable request message. In response to these 
        /// messages, clients transition the reliable request to the acknowledged state.
        /// </summary>
        //----------------------------------------------------------------------------------------//

        [EnumMember] Acknowledgement = 1,

        //----------------------------------------------------------------------------------------//
        /// <summary>
        /// The RELIABLE_REQUEST_RESPONSE message type represents the final response from a 
        /// service with the results of the original request by the client.
        /// </summary>
        //----------------------------------------------------------------------------------------//

        [EnumMember] Response = 2
    };
}

//------------------------------------------------------------------------------------------------//
// end of file
//------------------------------------------------------------------------------------------------//
